// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "mysql"
    url      = env("DATABASE_URL")
}

// Used to link between Discord and Minecraft accounts
model AccountLinkCodes {
    uuid String @id
    code String @unique @default(cuid())
}

enum Pronoun {
    HE
    SHE
    THEY
    ANY
    ASK
}

// Used to link Discord Account to Minecraft Account
model MinecraftPlayer {
    uuid     String   @id
    pronouns Pronoun?

    account KerberusAccount? @relation(fields: [uuid], references: [minecraft_uuid], onDelete: Cascade)
}

// Necessary for Next auth
model KerberusAccount {
    id                String           @id @default(cuid())
    userId            String
    type              String
    provider          String
    providerAccountId String
    refresh_token     String?          @db.Text
    access_token      String?          @db.Text
    expires_at        Int?
    token_type        String?
    scope             String?
    id_token          String?          @db.Text
    session_state     String?
    user              KerberusUser     @relation(fields: [userId], references: [id], onDelete: Cascade)
    minecraft_uuid    String?          @unique
    minecraft_player  MinecraftPlayer?

    @@unique([provider, providerAccountId])
}

model KerberusSession {
    id           String       @id @default(cuid())
    sessionToken String       @unique
    userId       String
    expires      DateTime
    user         KerberusUser @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model KerberusUser {
    id            String            @id @default(cuid())
    name          String?
    email         String?           @unique
    emailVerified DateTime?
    image         String?
    accounts      KerberusAccount[]
    sessions      KerberusSession[]
}

model KerberusVerificationToken {
    identifier String
    token      String   @unique
    expires    DateTime

    @@unique([identifier, token])
}
